Welcome to the CodeVisionAVR C Compiler V4 and the CodeWizardAVR Automatic Program Generator

The CodeVisionAVR Evaluation version has the following limitations, not present in the
commercial version:
- the compiled code size is restricted to 1kbyte (512words) for chips with
  less then 2kwords of FLASH and 4kbytes (2kword) of FLASH for the rest of chips
- interrupt driven serial communication code generation by the CodeWizardAVR is disabled
- EBI support for the ATxmega chips is disabled in the compiler
- TWI, EBI, RTC, RTC32 and Battery Backup System code generation is disabled in
  the CodeWizardAVR for the ATxmega devices
- no code is generated by the CodeWizardAVR for reading the Xmega ADC calibration
  data from the signature row
- no code is generated by the CodeWizardAVR for the initialization of the ATxmega E5,
  AVR8X and AVR DA timer/counters
- saving the generated C source code is disabled in the LCD Vision font and image
  editor/converter (an Advanced CodeVisionAVR license must be purchased to enable this function).

The compiler is designed to be used along with the Microchip/Atmel Studio 7 debugger, 
which can be downloaded from Microchip's web site: www.microchip.com

Details about using CodeVisionAVR with the Microchip/Atmel Studio 7 debugger are available
in the Help topic:
- Using the CodeVisionAVR Extension for Atmel Studio.


1. Installing CodeVisionAVR V4
1.1 Installing CodeVisionAVR V4 as a Microchip/Atmel Studio extension

This installation scenario requires Microchip/Atmel Studio 7 to be
installed before CodeVisionAVR V4, the user being logged-in as Administrator.

If the older Atmel Studio 6 is installed, it must be 
first fully uninstalled before installing Microchip/Atmel Studio 7.

After uninstalling the old Atmel Studio, the remaining "C:\Program Files (x86)\Atmel\Atmel Studio 6"  
directory and its contents must be deleted.

When installing Microchip/Atmel Studio, the user will be prompted by Windows 
if Microchip/Atmel Studio is allowed to make changes to the computer. 
The answer must be affirmative.
Under Windows XP the checkbox "Protect my computer and data from 
unauthorized program activity" must be unchecked.

After Microchip/Atmel Studio was successfully installed, the CodeVisionAVR 
installer "setup.exe" can be launched to finish the installation procedure.
The above step must be also performed being logged-in as Administrator.

For installing under Windows Vista, the following steps should be performed, 
being logged-in as Administrator.

- The Windows Vista User Account Control must be disabled using the steps below:

    - press the Windows button and click on the Control Panel link
    - in the Control Panel window, under the User Accounts and Family Safety, 
      click on the Add or remove user accounts link
    - a new window will open, click on the Go to the main User Accounts page 
      link located at the bottom of the window
    - a new window will open, click on the Turn User Account Control on or off 
      link located at the bottom of the window
    - in the new window that will open, uncheck the Use User Account Control (UAC)
      to help protect your computer check box and press the OK button to confirm
    - the computer will have to be restarted for this setting to become effective

- run the "setup.exe" installer
- after the installation is complete, right click on the CodeVisionAVR icon on 
  the desktop
- select Properties in the popup menu that will open
- a new window called CodeVisionAVR Properties will open
- select the Compatibility tab
- check the Privilege Level|Run this program as an administrator check box and 
  press the OK button to confirm.

Notes: 
- CodeVisionAVR usage always requires the user to be logged-in as Administrator.
- After installing CodeVisionAVR, please right click on the CodeVisionAVR icon
  on the desktop, select 'Properties|Advanced and' enable the 'Run as Administrator' option.
- Microchip Studio 7 must be also run as Adiministrator.
  Please right click on Microchip/Atmel Studio icon on the Windows Desktop,
  select 'Properties|Advanced' and enable the 'Run as Adminstrator' option.
- The Naggy extension for Microchip/Atmel Studio is not compatible with CodeVisionAVR.
  Naggy must be disabled from Microchip/Atmel Studio menu: Tools|Disable Naggy.
- Altough CodeVisionAVR V4 was installed as a Microchip/Atmel Studio extension, it can 
  also be used from it's own IDE without Microchip/Atmel Studio.

1.2 Installing CodeVisionAVR V4 without Microchip/Atmel Studio

Log-in as Administrator and launch the CodeVisionAVR installer "setup.exe" to 
perform the installation procedure.
Please ignore the error message, displayed during setup, that no Microchip/Atmel Studio 
installation was found.
For installing under Windows Vista please follow the steps mentioned at 1.1.


2. New features/bug fixes in CodeVisionAVR V4.03
2.1 Compiler:
- Added support for AVR EB chips.
- Added the predefined macros _PRINTF_FEATURES_ and _SCANF_FEATURES_ with
  the values corresponding with the ItemIndex of the corresponding listboxes
  from the project configuration.
 
2.2 CodeWizard
- Added support for AVR EB chips.
- In the CodeWizard for AVR8X chips added type casting to int or unsigned int
  when shifting left by 8 bits the high byte of the ADC result register.
  This is needed to ensure that the ADC result is correct if the user chooses
  later to disable the ANSI char to int type promotion in the project
  configuration.
- Fixed: The CodeWizard for AVR8X didn't initialize the PORTn.PORTCTRL register
  to limit the slew rate on I/O ports for the AVR DA/DB/DD/EA chips.
- Fixed the I/O port allocation of the Waveform Output signals 0..5 for Timer A0
  in the CodeWizard for the ATtiny212/412 chips.
- Updated the I/O port allocation of the SPI /SS signal in the CodeWizard for
  the ATtiny212/412 chips.
- Updated the alternate I/O port allocation of the SPI MOSI and MISO signals
  in the CodeWizard for for the ATtiny212/412 chips.
- Fixed in the CodeWizard for AVR DA chips: a non-existing symbol 'PORT_INLVL_bp'
  was generated in the I/O ports initialization code.
- Fixed in the CodeWizard for AVR8X devices: the RTC clock source setting saved
  in a .cw8x project file was not displayed when the project was later loaded.
- In the CodeWizard for AVR8X chips added additional checks for conflicts between
  the USART, SPI and TWI I/O signals.

2.3 Chip Programmer
- Added support for the Microchip PICKIT4 and SNAP programmers.
- Fixed: the BODACT and BODPD fuse settings were not to be displayed
  for the ATtiny1634/441/841/828 chips. The bug appeared in v4.00.
- Fixed: AVRDude issues errors when trying to perform Erase, Chip Signature,
  Fuse read operations on a locked device.

2.4 IDE
- Improved the IDE user interface and compatibility with Windows 10 and 11.
- Added in the Find/Replace in Files dialog the option to search/replace text
  in the files located in a specific directory.
- Improved SD card signal allocation display in the project configuration
  when enabling/disabling SD card usage.


3. Example programs

The Compiler is supplied with many example programs located in the CodeVisionAVR installation folder:
- ATtiny and ATmega chips in \Examples\AVR
- ATtiny817 in \Examples\ATtiny817 Xplained Mini
- ATmega4809 in \Examples\ATmega4809 Xplained Pro
- AVR128DA48 in \Examples\AVR128DA48 Curiosity Nano
- AVR128DB48 in \Examples\AVR128DB48 Curiosity Nano
- AVR64DD32 in \Examples\AVR64DD32 Curiosity Nano
- AVR64EA48 in \Examples\AVR64EA48 Curiosity Nano
- Universal CodeVision Bootloader library in \Examples\Bootloaders
- ATxmega chips in \Examples\XMEGA
- Graphic Displays in \Examples\Graphic Displays.
 
 
After starting CodeVisionAVR, execute the File|Open menu command and load the 
Project (*.prj) file for the example you like.
Then execute the Project|Build All menu command to compile and link the project.

Take some time and carefully read the Help.
